# couding: utf-8
# 1. Реализовать скрипт, в котором должна быть предусмотрена функция расчета заработной платы сотрудника.
# В расчете необходимо использовать формулу: (выработка в часах * ставка в час) + премия.
# Для выполнения расчета для конкретных значений необходимо запускать скрипт с параметрами.
'''
from sys import argv
def main (hours, payinhours, prize):
    return ((hours * payinhours) + prize)
try:
    script,a, b, c = argv
except ValueError:
    a = int(input("Введите выработку в часах:"))
    b = int(input("Введите ставку в час:"))
    c = int(input("Введите премию:"))
print(f"заработная плата сотрудника составила: {main(a,b,c)}")
'''
# 2. Представлен список чисел. Необходимо вывести элементы исходного списка, значения которых больше предыдущего элемента.
# Подсказка: элементы, удовлетворяющие условию, оформить в виде списка.
# формирования списка использовать генератор.
# Пример исходного списка: [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55].
# # Результат: [12, 44, 4, 10, 78, 123].
# x1 = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
# x2 = [el for el in x1]
# print(x2)

# Variant 2 работает кое-как
'''
x1 = [300, 2, 12, 44, 1, 1, 4, 10, 7, 1, 78, 123, 55]
i=0
while i<len(x1):
    if x1[i]<x1[i+1]:
        print(x1[i+1],end=" ")
    i += 1
'''

# готово
# 3. Для чисел в пределах от 20 до 240 найти числа, кратные 20 или 21. Необходимо решить задание в одну строку.
# Подсказка: использовать функцию range() и генератор.
'''
from random import random
x = (random for random in range(20,241) if random%20==0 or random%21==0)
for i in x:
    print(i)
'''
#готово
# 4. Представлен список чисел. Определить элементы списка, не имеющи е повторений. Сформировать итоговый массив чисел, соответствующих требованию. Элементы вывести в порядке их следования в исходном списке. Для выполнения задания обязательно использовать генератор.
# Пример исходного списка: [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11].
# Результат: [23, 1, 3, 10, 4, 11]
'''
x = [2, 2, 2, 7, 23, 1, 44, 44, 3, 2, 10, 7, 4, 11]
x2 = [el for el in x if x.count(el)<2]
print(f"Было:{x} \nСтало:{x2}")
'''
# 5. Реализовать формирование списка, используя функцию range() и возможности генератора. В список должны войти четные числа от 100 до 1000 (включая границы). Необходимо получить результат вычисления произведения всех элементов списка.
# Подсказка: использовать функцию reduce().
'''
Var 1
from numpy import prod
x = (param for param in range(100,1001) if param%2==0)
res = numpy.prod(x)
print(res)
'''
'''
Var 2
from functools import reduce
l =(param for param in range(100,1001) if param%2==0)
res = reduce((lambda x, y: x * y), l)
print(f"Результат вычисления произведения всех элементов списка:{res}")
'''
# 6. Реализовать два небольших скрипта:
# а) итератор, генерирующий целые числа, начиная с указанного,
# б) итератор, повторяющий элементы некоторого списка, определенного заранее.
# Подсказка: использовать функцию count() и cycle() модуля itertools. Обратите внимание, что создаваемый цикл не должен быть бесконечным. Необходимо предусмотреть условие его завершения.
# Например, в первом задании выводим целые числа, начиная с 3, а при достижении числа 10 завершаем цикл. Во втором также необходимо предусмотреть условие, при котором повторение элементов списка будет прекращено.
from random import random
from itertools import count, cycle
# Var а)
'''
x=int(input("Укажите начальное число"))
for el in count(x):
    if el > x+5:
        break
    else:
        print(el)
'''
# Var б)
'''
i = 0
for el in cycle(["ABC",123,88005553535]):
    if i > 5:
        break
    print(el)
    i += 1
'''
# 7. Реализовать генератор с помощью функции с ключевым словом yield, создающим очередное значение.
# При вызове функции должен создаваться объект-генератор. Функция должна вызываться следующим образом: for el in fact(n).
# Функция отвечает за получение факториала числа, а в цикле необходимо выводить только первые n чисел, начиная с 1! и до n!.
# Подсказка: факториал числа n — произведение чисел от 1 до n. Например, факториал четырёх 4! = 1 * 2 * 3 * 4 = 24.
'''
from math import factorial
from random import sample
def fact():
    for el in (float(input("введите первое число" )),float(input("введите второе число")),float(input("введите третье число"))):
        yield el
g = fact()
for el in g:
    print(f"Факториал числа {el} = {factorial(el)}")
'''
